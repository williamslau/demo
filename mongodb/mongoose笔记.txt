安装
cnpm i mongose -S


mongoose 是一个对象模型工具，就是把对数据的操作映射为对对象的操作




使用mongoose
var mongoose = require("mongoose");
var db = mongoose.connect("mongodb://user:pass@ip:port/database");
user 用户名
pass 密码
ip IP地址
port 端口号
database 数据库

ObjectId

4字节：UNIX时间戳
3字节：表示运行MongoDB的机器
2字节：表示生成此_id的进程
3字节：由一个随机数开始的计数器生成的值


数据类型
var personSchema = new Schema({
    name:String, //姓名
    binary:Buffer,//二进制
    living:Boolean,//是否活着
    birthday:Date,//生日
    age:Number,//年龄
    _id:Schema.Types.ObjectId,  //主键
    _fk:Schema.Types.ObjectId,  //外键
    array:[],//数组
    arrOfString:[String],//字符串数组
    arrOfNumber:[Number],//数字数组
    arrOfDate:[Date],//日期数组
    arrOfBuffer:[Buffer],//Buffer数组
    arrOfBoolean:[Boolean],//布尔值数组
    arrOfObjectId:[Schema.Types.ObjectId]//对象ID数组
    nested:{ //内嵌文档
    name:String,
    }
},{colection:'person'}); // 定义集合的名称，不写默认的


let person = new Person();
let persons = [];
for(let i=1; i<=10; i++){
    persons.push({name:'william'+i,age:i});
}
create 用于插入文档，类似于原生的insert
Person.create(persons,function(err,doce){
    console.log(err);
    console.log(doce);
});


find用于查询文档，类似原生的find,返回值永远是一个数组
Person.find({age:3},{name:1,_id:0},function(err,doce){
    console.log(err);
    console.log(doce);
});





